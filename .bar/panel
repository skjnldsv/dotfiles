#! /bin/sh
# Lemonbar panel (zsh required for icons)
########################

########################
# SOURCE CONFIG
. $(dirname $0)/lemonbar_config

########################
# export PANEL_FIFO PANEL_HEIGHT PANEL_FONT_FAMILY

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

########################
# Prepare panel fifo
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

########################
# bspc desktops
bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &

########################
# Active window title
xtitle -sf 'T%s' > "$PANEL_FIFO" &

########################
# Plex play
#zscroll -n -u -b "L " -d 0.2 -M "sh plexstatus.sh status" -m "No playing" -b "L " -s 0 -m "playing" -b "L$ICON_PLAY " -s 1 -m "paused" -b "L$ICON_PAUSE " -s 0 "sh plexstatus.sh" > "$PANEL_FIFO" &

########################
# POWER 
echo P$ICON_POWER > $PANEL_FIFO &

########################
# REBOOT 
echo R$ICON_REBOOT > $PANEL_FIFO &

########################
# CLOCK
while true;
	do 
		echo C$ICON_CLOCK $(date | grep  -Eo '[[:digit:]]{1,2}:[[:digit:]]{1,2}:[[:digit:]]{1,2}');
	sleep 1;
done > "$PANEL_FIFO" &

########################
# VOLUME
while true;
	do
		ALSA_VOLUME=$(amixer get Master | grep 'Left: Playback' | grep -o '...%' | sed 's/\[//' | sed 's/%//' | sed 's/ //')
		ALSA_STATE=$(amixer get Master | grep 'Left: Playback' | grep -o '\[on]')

		if [ $ALSA_VOLUME -ge 90 ]
		then
			VOL_ICON=$ICON_VOLMAX
			COLOR=$color05
			VOL=V$(urgent "$VOL_ICON $ALSA_VOLUME")
		fi
            		if [ $ALSA_VOLUME -ge 70 -a $ALSA_VOLUME -lt 90 ]
		then
			VOL_ICON=$ICON_VOLMAX
			COLOR=$color05
			VOL="V%{F$COLOR}$VOL_ICON%{F-} $ALSA_VOLUME"
		fi
		if [ $ALSA_VOLUME -gt 0 -a $ALSA_VOLUME -lt 70 ]
		then
			VOL_ICON=$ICON_VOLMED
			COLOR=$color02
			VOL="V%{F$COLOR}$VOL_ICON%{F-} $ALSA_VOLUME"
		fi
		if [ $ALSA_VOLUME -eq 0 ]
		then
			VOL_ICON=$ICON_VOLMIN
			COLOR=$color19
			VOL="V%{F$COLOR}$VOL_ICON%{F-} $ALSA_VOLUME"
		fi

		if [ $ALSA_STATE ]
		then
			echo $VOL
		else
			echo "V%{F$color19}$VOL_ICON $ALSA_VOLUME%{F-}"
		fi
	sleep 0.1

done > $PANEL_FIFO &

########################
# CPU + HDD + NETMONITOR
conky -c $(dirname $0)/lemonbar_conky > "$PANEL_FIFO" &

########################
# CPU Temp
while true;
	do 
		tempcpu=$(sensors | grep Physical | cut -c18-19)
		tempgpu=$(nvidia-smi -q -d temperature | grep "Current Temp" | cut -c 39-40)
		if [ $tempcpu -gt $CPU_TEMP_WARN_LEVEL ]
		then
			tempcpu="D $(urgent $tempcpu)째C"
		else
			tempcpu="D $tempcpu째C"
		fi;
		if [ $tempgpu -gt $GPU_TEMP_WARN_LEVEL ]
		then
			echo $tempcpu $(urgent $tempgpu)"째C"
		else
			echo $tempcpu $tempgpu"째C"
		fi;
	sleep 5
done > $PANEL_FIFO &

########################
# IP
while true;
	do 
		IP=$(wget --timeout=2 --tries=2 https://duckduckgo.com/\?q\=whats+my+ip -q -O - | grep  -Eo '[[:digit:]]{1,3}(\.[[:digit:]]{1,3}){3}')
		#IP=$(wget --timeout=5 --tries=2 -q -O - checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//')
		if [ $IP ]
		then
			echo "I$IP"
		else
			echo I$(urgent DISCONNECTED)
		fi;
	sleep 5;

done > $PANEL_FIFO &

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -f "$ICON_FONT1" -f "$ICON_FONT2" -f "$ICON_FONT_MENU" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2  | zsh &

wait
